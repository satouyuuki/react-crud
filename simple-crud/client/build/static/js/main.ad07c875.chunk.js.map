{"version":3,"sources":["actions.js","components/AddForm.js","components/CharacterList.js","components/App.js","reducers.js","index.js"],"names":["receiveDataSuccess","characterArray","type","AddForm","store","getState","form","name","age","onSubmit","e","preventDefault","axios","post","then","response","dispatch","data","catch","err","console","error","Error","handleSubmit","value","onChange","changeName","target","changeAge","CharacterList","characters","isFetching","onClick","get","_characterArray","map","character","key","_id","id","put","method","url","App","this","props","Component","initialState","rootReducer","combineReducers","state","action","createStore","render","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.ad07c875.chunk.js","sourcesContent":["// 文字列定数\nexport const CHANGE_NAME = 'CHANGE_NAME';\nexport const CHANGE_AGE = 'CHANGE_AGE';\nexport const INITIALIZE_FORM = 'INITIALIZE_FORM';\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const RECEIVE_DATA_SUCCESS = 'RECEIVE_DATA_SUCCESS';\nexport const RECEIVE_DATA_FAILED = 'RECEIVE_DATA_FAILED';\n\n// action creaters\nexport const changeName = name => ({\n  type: CHANGE_NAME ,\n  name,\n})\nexport const changeAge = age => ({\n  type: CHANGE_AGE ,\n  age,\n})\nexport const initializeForm = () => ({\n  type: INITIALIZE_FORM ,\n})\nexport const requestData = () => ({\n  type: REQUEST_DATA,\n})\nexport const receiveDataSuccess = (characterArray) => ({\n  type: RECEIVE_DATA_SUCCESS,\n  characterArray,\n})\nexport const receiveDataFailed = () => ({\n  type: RECEIVE_DATA_FAILED,\n})","import React from 'react'\nimport axios from 'axios';\nimport {\n  changeName, changeAge, initializeForm,\n  requestData, receiveDataSuccess, receiveDataFailed\n} from '../actions'\n\nconst AddForm = ({ store }) => {\n  const { name, age } = store.getState().form;  // storeからフォームの内容を取得\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('/api/characters', {\n      name,\n      age,\n    })\n      .then(response => {\n        // console.log(response);\n        store.dispatch(initializeForm());// submit後はフォームを初期化\n        const characterArray = response.data;\n        store.dispatch(receiveDataSuccess(characterArray));\n      })\n      .catch(err => {\n        console.error(new Error(err));\n        store.dispatch(receiveDataFailed());\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={e => handleSubmit(e)}>\n        <label>\n          名前:\n          <input value={name} onChange={e => store.dispatch(changeName(e.target.value))} />\n        </label>\n        <label>\n          年齢:\n          <input value={age} onChange={e => store.dispatch(changeAge(e.target.value))} />\n        </label>\n        <button type=\"submit\">submit</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddForm","import React from 'react';\nimport axios from 'axios';\nimport { requestData, receiveDataSuccess, receiveDataFailed } from '../actions';\n\nconst CharacterList = ({ store }) => {\n  const { isFetching, characterArray } = store.getState().characters;\n\n  const handleFetchData = () => {\n    store.dispatch(requestData()); // axios.get()を呼ぶ前にisFetchingをtrueにしておく\n    axios.get('/api/characters')\n      .then(response => {\n        const _characterArray = response.data;\n        store.dispatch(receiveDataSuccess(_characterArray));\n      })\n      .catch(err => {\n        console.error(new Error(err));\n        store.dispatch(receiveDataFailed()) // isFetchをfalseに\n      })\n  }\n\n  const handleUpdateCharacter = id => {\n    store.dispatch(requestData())\n    axios.put('/api/characters', {\n      id,\n    })\n      .then(response => {\n        const _characterArray = response.data;\n        store.dispatch(receiveDataSuccess(_characterArray));\n      })\n      .catch(err => {\n        console.error(new Error(err));\n        store.dispatch(receiveDataFailed());\n    })\n  }\n  const handleDeleteCharacter = id => {\n    store.dispatch(requestData())\n    axios({\n      method: 'delete',\n      url: '/api/characters',\n      data: {\n        id,\n      }\n    })\n      .then(response => {\n        const _characterArray = response.data;\n        store.dispatch(receiveDataSuccess(_characterArray));\n      })\n      .catch(err => {\n        console.error(new Error(err));\n        store.dispatch(receiveDataFailed());\n    })\n  }\n\n  return (\n    <div>\n      {\n        isFetching // isFetchingの値で出しわけ\n          ? <h2>Now Loading...</h2>\n          : <div>\n              <button onClick={() => handleFetchData()}>fetch data</button>\n              <ul>\n              {characterArray.map(character => (\n                <li key={character._id}>\n                  {`${character.name} (${character.age})`}\n                  <button onClick={() => handleUpdateCharacter(character._id)}>+1</button>\n                  <button onClick={() => handleDeleteCharacter(character._id)}>delete</button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n      }\n    </div>\n  )\n}\n\nexport default CharacterList","import React, { Component } from 'react';\nimport AddForm from './AddForm';\nimport CharacterList from './CharacterList';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <AddForm store={this.props.store}/>\n        <CharacterList store={this.props.store}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","import { combineReducers } from 'redux';\nimport {\n  CHANGE_NAME, CHANGE_AGE, INITIALIZE_FORM,\n  REQUEST_DATA, RECEIVE_DATA_SUCCESS, RECEIVE_DATA_FAILED\n} from './actions';\nconst initialState = {\n  form: {// AddFormに入力されている文字列\n    name: '',\n    age: '',\n  },\n  characters: {\n    isFetching: false,// サーバーからキャラクターのリストを取ってきている最中かどうか\n    characterArray: [], // キャラクターのデータを入れるArray\n  }\n}\n\nconst formReducer = (state = initialState.form, action) => {\n  // console.log(state);\n  switch (action.type) {\n    case CHANGE_NAME:\n      return {\n        ...state,\n        name: action.name,\n      }\n    case CHANGE_AGE:\n      return {\n        ...state,\n        age: action.age,\n      }\n    case INITIALIZE_FORM:\n      return initialState.form\n    default:\n      return state\n  }\n}\n\n// charactersのためのreducer(あとで実装)\nconst charactersReducer = (state = initialState.characters, action) => {\n  // console.log(action);\n  switch (action.type) {\n    case REQUEST_DATA:\n      return {\n        ...state,\n        isFetching: true,\n      }\n    case RECEIVE_DATA_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        characterArray: action.characterArray,\n      }\n    case RECEIVE_DATA_FAILED:\n      return {\n        ...state,\n        isFetching: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  form: formReducer,\n  characters: charactersReducer,\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport App from './components/App';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nconst render = () => {\n  ReactDOM.render(\n    <App store={store} />,\n    document.getElementById('root')\n  )\n}\n\nstore.subscribe(() => {\n  render()\n  // console.log(store.getState().form)\n})\nrender();"],"sourceRoot":""}